@model Application.Pocos.EditBookPoco

@{
    ViewData["Title"] = "Edit Book";
}

<section class="book-page bg-light">

    <div class="container mt-5">
        <div class="row">
            <div class="col-md-12">
                <div class="card d-flex align-items-center justify-content-center col-12 p-4">
                    <form id="editBookForm" method="PUT" asp-controller="Book" asp-action="Edit" class="d-flex flex-column align-items-center">
                        <h1 class="mb-3">@ViewData["Title"]</h1>
                        <div class="row row-cols-1 row-cols-md-3 g-4 my-3 pb-3 px-3 mx-1 overflow-auto border rounded" style="max-height: 25rem;">
                            @foreach (var libraryLocation in Model.LibraryStocks.Keys)
                            {
                                <div class="col">
                                    <div class="card">
                                        <div class="card-body overflow-auto">
                                            <p class="card-text text-xl"><b>Open Time:</b> @libraryLocation.OpenTime.ToString("HH:mm") - <b>Close Time:</b> @libraryLocation.CloseTime.ToString("HH:mm")</p>
                                            <p class="card-text text-xl"><b>Address:</b> @libraryLocation.Address1 @(!string.IsNullOrEmpty(libraryLocation.Address2) ? libraryLocation.Address2 : "")</p>
                                            <div class="d-flex flex-row align-items-center">
                                                <p class="card-text text-xl fw-bold pe-2 mb-0">Stock:</p>
                                                <div class="form-floating col-10">
                                                    <input id="libraryStock" class="form-control p-2" style="height: 2.5rem;" asp-for="LibraryStocks[libraryLocation]" type="number" min="0" value="@Model.LibraryStocks[libraryLocation].Stock" />
                                                    <span asp-validation-for="LibraryStocks[libraryLocation]" class="text-danger"></span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>

                        <div class="d-flex flex-row justify-content-between col-12 mb-3">
                            <div class="">
                                <div class="form-floating">
                                    <div class="input-group mb-1">
                                        <div class="input-group-prepend">
                                            <span class="input-group-text">Upload</span>
                                        </div>
                                        <div class="custom-file">
                                            <input type="file" class="custom-file-input" id="bookdata-thumbnail" asp-for="BookData.Thumbnail" placeholder="Thumbnail" value="BookData.Thumbnail" onchange="previewThumbnail(event)">
                                            <label class="custom-file-label" for="bookdata-thumbnail">Choose file</label>
                                            <span asp-validation-for="BookData.Thumbnail" class="text-danger"></span>
                                        </div>
                                    </div>
                                </div>
                                <div id="thumbnail-preview" class="position-relative">
                                    <img id="thumbnail-img" class="img-fluid books-img" src="@(string.IsNullOrEmpty(Model.BookData.Thumbnail) ? "/assets/img/books/no-src.jpg" : Model.BookData.Thumbnail)" alt="Thumbnail Preview" />
                                    @if (!string.IsNullOrEmpty(Model.BookData.Thumbnail))
                                    {

                                        <button type="button" class="btn-close position-absolute top-0 end-0 m-2" aria-label="Close" onclick="removeThumbnail(event)"></button>
                                    }
                                </div>
                            </div>

                            <div class="col-6">
                                <div class="form-floating mb-3">
                                    <input id="bookdata-title" class="form-control" asp-for="BookData.Title" placeholder="Title" value="@Model.BookData.Title"/>
                                    <label for="bookdata-title">Title</label>
                                    <span asp-validation-for="BookData.Title" class="text-danger"></span>
                                </div>
                                <div class="form-floating mb-3">
                                    <textarea id="bookdata-description" class="form-control" style="height: 15rem; resize: none;" asp-for="BookData.Description" placeholder="Description">@Model.BookData.Description</textarea>
                                    <label for="bookdata-description" class="bg-white opacity-100" style="padding: 0rem 0.75rem; width: 8rem; height: 2rem; top: 0.75rem">Description</label>
                                    <span asp-validation-for="BookData.Description" class="text-danger"></span>
                                </div>

                                <div class="form-floating mb-3">
                                    <input type="text" id="bookdata-authors" class="form-control" placeholder="Authors" autocomplete="off" list="authorOptions" oninput="toggleCheckIcon()">
                                    <input type="hidden" id="initialAuthors" asp-for="BookData.Authors" value="@Html.Raw(Json.Serialize(Model.BookData.Authors))" />
                                    <datalist id="authorOptions">
                                        @foreach (var author in ViewBag.AuthorNames)
                                        {
                                            <option value="@author" />
                                        }
                                    </datalist>
                                    <label for="bookdata-authors">Authors</label>
                                    <i id="checkIcon" class="fa-solid fa-check fa-xl text-white bg-success p-1 rounded position-absolute end-0 translate-middle-y me-2" style="display: none; cursor: pointer; top: 30%;" onclick="addAuthorBadge()"></i>

                                    <div id="authors-list" class="mt-2">
                                        @foreach (var author in Model.BookData.Authors)
                                        {
                                            <span class="badge badge-pill badge-primary fs-6 my-1 me-1">@author <i class="fas fa-times" style="cursor: pointer;" onmouseover="this.parentNode.style.backgroundColor = '#dc3545';" onmouseout="this.parentNode.style.backgroundColor = '';" onclick="removeAuthor(this)"></i></span>
                                        }
                                    </div>
                                </div>
                            </div>

                        </div>
                        <div class="form-floating d-flex justify-content-center py-3">
                            <button type="reset" class="btn btn-danger btn-lg me-3">Discard Changes</button>
                            <button type="submit" class="btn btn-primary btn-lg">Save Changes</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</section>

<script>
    var initialAuthors = JSON.parse(document.getElementById("initialAuthors").value);

    document.querySelector('form').addEventListener('reset', function(event) {
        
        document.getElementById('bookdata-authors').value = '';
        toggleCheckIcon();
        
        initialAuthors = JSON.parse(document.getElementById("initialAuthors").value);
        
        resetBadges();
        resetThumbnail();
    });

    function previewThumbnail(event) {
        const file = event.target.files[0];
        const reader = new FileReader();

        reader.onload = function (e) {
            const preview = document.getElementById('thumbnail-preview');
            preview.innerHTML = '';

            const img = document.createElement('img');
            img.className = 'img-fluid books-img';
            img.src = e.target.result;
            preview.appendChild(img);

            const closeButton = document.createElement('button');
            closeButton.className = 'btn-close position-absolute top-0 end-0 m-2';
            closeButton.setAttribute('aria-label', 'Close');
            closeButton.onclick = () => { removeThumbnail(); };
            preview.appendChild(closeButton);
        };

        if (file) {
            reader.readAsDataURL(file);
        }
    }

    function removeThumbnail() {
        const preview = document.getElementById('thumbnail-preview');
        preview.innerHTML = '';

        const img = document.createElement('img');
        img.className = 'img-fluid books-img';
        img.src = "/assets/img/books/no-src.jpg";
        preview.appendChild(img);
    }

    function resetThumbnail() {
        const preview = document.getElementById('thumbnail-preview');
        
        preview.innerHTML = '';
        
        const img = document.createElement('img');
        img.className = 'img-fluid books-img';
        
        img.src = "@(string.IsNullOrEmpty(Model.BookData.Thumbnail) ? "/assets/img/books/no-src.jpg" : Html.Raw(Model.BookData.Thumbnail))";
        
        preview.appendChild(img);
        
        if (!img.src.endsWith("/assets/img/books/no-src.jpg")) {
            const closeButton = document.createElement('button');
            closeButton.className = 'btn-close position-absolute top-0 end-0 m-2';
            closeButton.setAttribute('aria-label', 'Close');
            closeButton.onclick = () => { removeThumbnail(); };
            preview.appendChild(closeButton);
        }
    }

    function removeAuthor(element) {
        var badgeSpan = element.parentNode;
        var authorName = badgeSpan.textContent.trim();

        badgeSpan.remove();

        initialAuthors = initialAuthors.filter(function (author) {
            return author !== authorName;
        });
    }

    function toggleCheckIcon() {
        var input = document.getElementById("bookdata-authors");
        var checkIcon = document.getElementById("checkIcon");
        if (input.value.trim() !== '') {
            checkIcon.style.display = 'inline';
        } else {
            checkIcon.style.display = 'none';
        }
    }

    function addAuthorBadge() {
        var input = document.getElementById("bookdata-authors");
        var authorName = input.value.trim();
        if (authorName !== '' && !initialAuthors.includes(authorName)) {
            var authorsList = document.getElementById("authors-list");
            var newBadge = document.createElement('span');
            newBadge.className = 'badge badge-pill badge-primary fs-6 my-1 me-1';
            newBadge.textContent = authorName;
            var closeButton = document.createElement('i');

            closeButton.className = 'fas fa-times ms-1';
            closeButton.style.cursor = 'pointer';
            closeButton.setAttribute('onmouseover', "this.parentNode.style.backgroundColor = '#dc3545';");
            closeButton.setAttribute('onmouseout', "this.parentNode.style.backgroundColor = '';");
            closeButton.setAttribute('onclick', 'removeAuthor(this)');

            newBadge.appendChild(closeButton);
            authorsList.appendChild(newBadge);
            input.value = '';
            toggleCheckIcon();
            
            initialAuthors.push(authorName);
        }
    }

    function resetBadges() {
        var authorsList = document.getElementById("authors-list");
        authorsList.innerHTML = "";
        var initialAuthors = JSON.parse(document.getElementById("initialAuthors").value);
        initialAuthors.forEach(function (author) {
            var newBadge = document.createElement('span');
            newBadge.className = 'badge badge-pill badge-primary fs-6 my-1 me-1';
            newBadge.textContent = author;
            var closeButton = document.createElement('i');
            closeButton.className = 'fas fa-times ms-1';
            closeButton.style.cursor = 'pointer';
            closeButton.setAttribute('onmouseover', "this.parentNode.style.backgroundColor = '#dc3545';");
            closeButton.setAttribute('onmouseout', "this.parentNode.style.backgroundColor = '';");
            closeButton.setAttribute('onclick', 'removeAuthor(this)');
            newBadge.appendChild(closeButton);
            authorsList.appendChild(newBadge);
        });
    }

</script>
